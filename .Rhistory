data <- data.frame(
num_thread =  c(1, 2, 5, 10, 20, 40, 80, 120),
percent_1 = c(1604.39, 814.507, 337.936, 197.947, 108.282, 64.2614, 64.6179, 71.84),
percent_2 = c(5999.23, 3005.59, 1214.35, 688.519, 353.096, 239.968, 185.006, 149.679),
percent_5 = c(34327.9, 17133.4, 6907.46, 3889.31, 1951.35, 1207.59, 778.801, 646.755)
)
# Percent 1% plot
p1 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
labs(title = "1% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "steelblue") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 2% plot
p2 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_point(aes(y = percent_2)) +
labs(title = "2% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "magenta") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 5% plot
p3 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_5)) +
labs(title = "5% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "darkgreen") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Combined plot (your original one)
p_combined <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
geom_point(aes(y = percent_2)) +
geom_point(aes(y = percent_5)) +
labs(title = "Execution Time vs Thread Count",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = c(
"1%" = "steelblue",
"2%" = "magenta",
"5%" = "darkgreen")) +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
p_empty <- ggplot() + theme_void()
# Arrange the plots in a 2x2 grid
grid.arrange(p1, p2, p3, p_empty, ncol = 2)
p_combined
library(ggplot2)
library(gridExtra)
# Data
data <- data.frame(
num_thread =  c(1, 2, 5, 10, 20, 40, 80, 120),
percent_1 = c(1604.39, 814.507, 337.936, 197.947, 108.282, 64.2614, 64.6179, 71.84),
percent_2 = c(5999.23, 3005.59, 1214.35, 688.519, 353.096, 239.968, 185.006, 149.679),
percent_5 = c(34327.9, 17133.4, 6907.46, 3889.31, 1951.35, 1207.59, 778.801, 646.755)
)
# Percent 1% plot
p1 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
labs(title = "1% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "steelblue") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 2% plot
p2 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_point(aes(y = percent_2)) +
labs(title = "2% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "magenta") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 5% plot
p3 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_5)) +
labs(title = "5% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "darkgreen") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Combined plot (your original one)
p_combined <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
geom_point(aes(y = percent_2)) +
geom_point(aes(y = percent_5)) +
labs(title = "Execution Time vs Thread Count",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = c(
"1%" = "steelblue",
"2%" = "magenta",
"5%" = "darkgreen")) +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Arrange the plots in a 2x2 grid
grid.arrange(p1, p2, p3, p_empty, ncol = 2)
p_combined
library(ggplot2)
library(gridExtra)
# Data
data <- data.frame(
num_thread =  c(1, 2, 5, 10, 20, 40, 80, 120),
percent_1 = c(1604.39, 814.507, 337.936, 197.947, 108.282, 64.2614, 64.6179, 71.84),
percent_2 = c(5999.23, 3005.59, 1214.35, 688.519, 353.096, 239.968, 185.006, 149.679),
percent_5 = c(34327.9, 17133.4, 6907.46, 3889.31, 1951.35, 1207.59, 778.801, 646.755)
)
# Percent 1% plot
p1 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
labs(title = "1% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "steelblue") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 2% plot
p2 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_point(aes(y = percent_2)) +
labs(title = "2% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "magenta") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 5% plot
p3 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_5)) +
labs(title = "5% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "darkgreen") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Combined plot (your original one)
p_combined <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
geom_point(aes(y = percent_2)) +
geom_point(aes(y = percent_5)) +
labs(title = "Execution Time vs Thread Count",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = c(
"1%" = "steelblue",
"2%" = "magenta",
"5%" = "darkgreen")) +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Arrange the plots in a 2x2 grid
grid.arrange(p1, p2, p3, p_empty, ncol = 2)
p1
p2
p3
p_combined
library(ggplot2)
library(gridExtra)
# Data
data <- data.frame(
num_thread =  c(1, 2, 5, 10, 20, 40, 80, 120),
percent_1 = c(1604.39, 814.507, 337.936, 197.947, 108.282, 64.2614, 64.6179, 71.84),
percent_2 = c(5999.23, 3005.59, 1214.35, 688.519, 353.096, 239.968, 185.006, 149.679),
percent_5 = c(34327.9, 17133.4, 6907.46, 3889.31, 1951.35, 1207.59, 778.801, 646.755)
)
# Percent 1% plot
p1 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
labs(title = "1% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "steelblue") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 2% plot
p2 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_point(aes(y = percent_2)) +
labs(title = "2% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "magenta") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Percent 5% plot
p3 <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_5)) +
labs(title = "5% Non-zero Matrix",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = "darkgreen") +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Combined plot (your original one)
p_combined <- ggplot(data, aes(x = num_thread)) +
geom_smooth(aes(y = percent_1, color = "1%"), se = FALSE) +
geom_smooth(aes(y = percent_2, color = "2%"), se = FALSE) +
geom_smooth(aes(y = percent_5, color = "5%"), se = FALSE) +
geom_point(aes(y = percent_1)) +
geom_point(aes(y = percent_2)) +
geom_point(aes(y = percent_5)) +
labs(title = "Execution Time vs Thread Count",
x = "Number of Threads (log scale)",
y = "Time (s)",
color = "Non-zeros (%)") +
scale_color_manual(values = c(
"1%" = "steelblue",
"2%" = "magenta",
"5%" = "darkgreen")) +
scale_x_log10(breaks = c(1, 2, 5, 10, 20, 40, 80, 120))
# Arrange the plots in a 2x2 grid
p1
p2
p3
p_combined
matrix_data <- matrix(rnorm(50), nrow = 5, ncol = 10)
# get 10 random and make them NAs
na_indices <- sample(1:length(matrix_data), 10)
matrix_data[na_indices] <- NA
# Assign row and column names
rownames(matrix_data) <- paste("Patient", 1:5)
colnames(matrix_data) <- paste("Record", 1:10)
# Convert to a data frame for easier subsetting
patient_records <- as.data.frame(matrix_data)
# Display the data frame
patient_records
matrix_data <- matrix(rnorm(50), nrow = 5, ncol = 10)
# get 10 random and make them NAs
na_indices <- sample(1:length(matrix_data), 10)
matrix_data[na_indices] <- NA
# Assign row and column names
rownames(matrix_data) <- paste("Patient", 1:5)
colnames(matrix_data) <- paste("Record", 1:10)
# Convert to a data frame for easier subsetting
patient_records <- as.data.frame(matrix_data)
# Display the data frame
patient_records
matrix_data <- matrix(rnorm(50), nrow = 5, ncol = 10)
# get 10 random and make them NAs
na_indices <- sample(1:length(matrix_data), 10)
matrix_data[na_indices] <- NA
# Convert to a data frame for easier subsetting
patient_records <- as.data.frame(matrix_data)
# Display the data frame
patient_records
summary(winedata)
winedata <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", sep=";")
View(winedata)
View(winedata)
head(winedata)
str(winedata)
summary(winedata)
import(ggplot2)
library(ggplot2)
library(gridExtra)
hist_sugar <- ggplot(rw, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
labs(title = "Residual Sugar", x = "Residual Sugar", y = "Frequency")
# Create histograms for 'residual.sugar' and 'fixed.acidity'
hist_sugar <- ggplot(winedata, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
labs(title = "Residual Sugar", x = "Residual Sugar", y = "Frequency")
hist_acidity <- ggplot(winedata, aes(x = fixed.acidity)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
labs(title = "Fixed Acidity", x = "Fixed Acidity", y = "Frequency")
# Arrange the histograms side by side
grid.arrange(hist_sugar, hist_acidity, ncol = 2)
df <- read.csv("dataset.csv")
setwd("C:/Users/dayu/My Drive (liudayubob@gmail.com)/UWA/Sem2, 2024/CITS4009/CITS4009-project")
df <- read.csv("dataset.csv")
View(data)
View(data)
View(df)
View(df)
str(df)
summary(df)
head(df)
head(df, 20)
head(df, 30)
View(df)
View(df)
# Packages
library(ggplot2)
long_df <- df %>% gather(key = "Variable", value = "Deaths", -Entity, -Code, -Year)
long_df <- df %>%
gather(key = "Variable", value = "Deaths", -Entity, -Code, -Year)
library(ggplot2)
library(tidyr)
long_df <- df %>%
gather(key = "Variable", value = "Deaths", -Entity, -Code, -Year)
View(long_df)
ggplot(long_df, aes(x = Deaths)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
facet_wrap(~ Variable, scales = "free") +
labs(title = "Histogram of Death Causes (Aggregated across Countries and Years)",
x = "Number of Deaths",
y = "Frequency")
# Aggregate data across all countries and years
# Identify the relevant columns for death causes (excluding non-numeric or non-death cause columns)
death_cause_columns <- df %>%
select(-Entity, -Code, -Year) # Remove non-relevant columns (Entity, Code, Year)
library(tidyr)
library(dplyr)
library(dplyr)
# Aggregate data across all countries and years
# Identify the relevant columns for death causes (excluding non-numeric or non-death cause columns)
death_cause_columns <- df %>%
select(-Entity, -Code, -Year) # Remove non-relevant columns (Entity, Code, Year)
# Summarize total deaths for each cause across all countries and years
death_totals <- death_cause_columns %>%
summarise_all(sum, na.rm = TRUE)
# Convert the data to long format for easy plotting
death_totals_long <- death_totals %>%
gather(key = "Death_Cause", value = "Total_Deaths")
# Generate a bar plot to compare total deaths for each cause
ggplot(death_totals_long, aes(x = reorder(Death_Cause, Total_Deaths), y = Total_Deaths, fill = Death_Cause)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Total Deaths by Cause (Aggregated Across All Countries and Years)",
x = "Cause of Death",
y = "Total Deaths") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()  # Flipping the axes for better readability if too many causes
# Generate a bar plot to compare total deaths for each cause
ggplot(death_totals, aes(x = reorder(Death_Cause, Total_Deaths), y = Total_Deaths, fill = Death_Cause)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Total Deaths by Cause (Aggregated Across All Countries and Years)",
x = "Cause of Death",
y = "Total Deaths") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
death_cause_columns <- df %>%
select(-Entity, -Code, -Year)
# Summarize total deaths for each cause
death_totals <- death_cause_columns %>%
summarise_all(sum, na.rm = TRUE)
death_totals_long <- death_totals %>%
gather(key = "death_cause", value = "total_death")
# Generate a bar plot to compare total deaths for each cause
ggplot(death_totals_long, aes(x = reorder(death_cause, total_death), y = total_death, fill = death_cause)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Total Deaths by causes",
x = "Death Cause",
y = "Total Deaths") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
df_long <- df %>%
gather(key = "Variable", value = "Deaths", -Entity, -Code, -Year) %>%
group_by(Year, Variable) %>%
summarise(Total_Deaths = sum(Deaths, na.rm = TRUE))
# Generate line plots for each variable over the years
ggplot(df_long, aes(x = Year, y = Total_Deaths, color = Variable)) +
geom_line() +
facet_wrap(~ Variable, scales = "free") +
labs(title = "Yearly Trend of Death Causes (Aggregated across Countries)",
x = "Year",
y = "Total Deaths")
df_long <- df %>%
select(-Entity, -Code) %>%
group_by(Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death", -Year)
ggplot(df_long, aes(x = Year, y = death, color = cause)) +
geom_line(size = 1) +
labs(title = "Death per cause Vs Year",
x = "Year",
y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
death_cause_columns <- df %>%
select(-Entity, -Code, -Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death")
ggplot(death_totals_long, aes(x = reorder(cause, death), y = death, fill = cause)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Total Deaths by causes",
x = "Death Cause",
y = "Total Deaths") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death")
ggplot(df_cause, aes(x = reorder(cause, death), y = death, fill = cause)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Total Deaths by causes",
x = "Death Cause",
y = "Total Deaths") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
df_cause_year <- df %>%
select(-Entity, -Code) %>%
group_by(Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death", -Year)
ggplot(df_cause_year, aes(x = Year, y = death, color = cause)) +
geom_line(size = 1) +
labs(title = "Death per cause Vs Year",
x = "Year",
y = "Total Deaths") +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
pairs(df_cause, main = "Scatterplot Matrix of Death Causes", pch = 21)
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death")
View(df_cause)
View(df_cause)
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
gather(key = "cause", value = "death")
View(df_cause)
View(df_cause)
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
View(df_cause)
View(df_cause_year)
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
pairs(df, main = "Scatterplot Matrix of Death Causes", pch = 21)
pairs(df, main = "Scatterplot Matrix of Death Causes")
pairs(df)
death_cause_df <- df %>%
select(Outdoor_air_pollution, High_systolic_blood_pressure, Diet_high_in_sodium,
Smoking, Alcohol_use, Child_stunting, Unsafe_water_source, High_fasting_plasma_glucose)
death_cause_df <- df %>%
select(-Entity, -Code, -Year)
# Generate a scatterplot matrix using the pairs function
pairs(death_cause_df,
main = "Scatterplot Matrix of Death Causes (No Country/Year Specific)",
pch = 21,
bg = "lightblue")
df_cause <- df %>%
select(-Entity, -Code, -Year) %>%
summarise_all(sum, na.rm = TRUE) %>%
gather(key = "cause", value = "death")
View(df_cause)
View(df_cause)
View(death_cause_df)
death_cause <- df %>%
select(-Entity, -Code, -Year)
View(death_cause)
View(death_cause)
df_cause_sum <- df %>%
select(-Entity, -Code, -Year) %>%
summarise_all(sum, na.rm = TRUE)
View(df_cause_sum)
View(df_cause_sum)
View(df_cause)
png("scatterplot_matrix.png", width = 1920, height = 1080)
pairs(death_cause,
main = "Scatterplot Matrix of Death Causes (No Country/Year Specific)",
pch = 21,
bg = "lightblue")
dev.off()
death_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
pairs(death_cause,
main = "Scatterplot Matrix of Death Causes (No Country/Year Specific)",
pch = 21,
bg = "lightblue")
View(df_cause)
View(df_cause)
death_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
death_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
View(df_cause)
View(df_cause)
View(death_cause)
df_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
View(df_cause)
View(df_cause)
df_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
View(death_totals_long)
df_cause <- df %>%
select (Outdoor.air.pollution, High.systolic.blood.pressure, Diet.high.in.sodium)
df_cause <- df %>%
select(-Entity, -Code, -Year)
df_cause <- df %>%
select(-Entity, -Code, -Year)
# Generate a scatterplot matrix using the pairs function
png("scatterplot_matrix.png", width = 1920, height = 1080)
pairs(df_cause, main = "Scatterplot Matrix")
dev.off()
